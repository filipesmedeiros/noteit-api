# It's important that this part is always the same for all services in the app, for each deploy
# Except for the environment variables, that can be different
config:
  # Change this variable to be unique within your apps (don't change for the same app)
  app-name: noteit
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, dev}

  # Load our secret environment variables based on the current stage.
  # Fallback to default if it is not in prod.
  # Uncomment when needed
  # environmentSecrets: ${file(env.yml):${self:config.stage}, file(env.yml):default}

  # Provider configs
  provider:
    name: aws
    runtime: nodejs8.10

    # Change this according to the stage in which you are developing
    stage: dev
    region: eu-west-2

service: ${self:config.app-name}-dynamodb

provider:
  name: ${self:config.provider.name}
  runtime: ${self:config.provider.runtime}

  # Change this according to the stage in which you are developing
  stage: ${self:config.provider.stage}
  region: ${self:config.provider.region}
  # Set the table name here so we can use it while testing locally
  tableName: ${self:config.stage}-${self:custom.app-name}-notes
  # Set our DynamoDB throughput for prod and all other non-prod stages.
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:config.stage}, self:custom.tableThroughputs.default}

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        # Generate a name based on the stage
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: noteId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: noteId
            KeyType: RANGE
        # Set the capacity based on the stage
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}

  Outputs:
    NotesTableArn:
      Value:
        Fn::GetAtt:
          - NotesTable
          - Arn
      Export:
        Name: ${self:config.stage}-NotesTableArn
